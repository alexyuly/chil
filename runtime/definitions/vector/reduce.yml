name: reduce
parameters:
    Type:
        any/abstract/reducer:
            State Type: State Type
            Action Type: Action Type
is:
    any/abstract/reducer:
        State Type: State Type
        Action Type: { vector: Action Type }
values:
    set state:
        to: { aggregate: set state }
    dispatch:
        to:
            count: dispatch
            dissect: dispatch
operations:
    count:
        of: vector/count
        to: { collect: set state }
    dissect:
        of: { vector/dissect: { Type: Input Type } }
        to: { operate: dispatch }
    aggregate:
        of: { vector/aggregate: Type }
        to: { collect: dispatch }
    collect:
        of: { vector/collect: { Type: Output Type } }
        to: { last: dispatch }
    last:
        of: { vector/last: Output Type } }
        to: { reduce: }
# TODO - account for operators which do not map 1 input to 1 output
